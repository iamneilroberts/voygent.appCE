# VoygentCE Environment Configuration
# Copy this file to .env and customize for your environment

# =============================================================================
# CORE SYSTEM CONFIGURATION
# =============================================================================

# Service Hosts (adjust for production deployment)
LIBRECHAT_HOST=localhost
API_HOST=localhost

# =============================================================================
# ORCHESTRATOR API CONFIGURATION  
# =============================================================================

# Orchestrator service port
PORT=3000

# Database configuration (SQLite by default)
DB_FILE=/app/data/voygen.sqlite
SCHEMA_FILE=/app/../db/d1.sql

# Alternative: PostgreSQL database URL (uncomment to use instead of SQLite)
# DATABASE_URL=postgres://voygent:voygent123@mongodb:5432/voygent

# =============================================================================
# LLM PROVIDER API KEYS (BYOK - Bring Your Own Keys)
# =============================================================================

# Anthropic Claude API Key (recommended for travel planning)
ANTHROPIC_API_KEY=

# OpenAI API Key (alternative/backup)  
OPENAI_API_KEY=

# =============================================================================
# LIBRECHAT CONFIGURATION
# =============================================================================

# LibreChat Host and Port
HOST=0.0.0.0
PORT=3080

# Optional: override the LibreChat image (use stable if dev has issues)
# LIBRECHAT_IMAGE=dannyavila/librechat:latest

# MongoDB Configuration (for LibreChat)
MONGODB_URI=mongodb://voygent:voygent123@mongodb:27017/voygent?authSource=voygent
MONGODB_USERNAME=voygent
MONGODB_PASSWORD=voygent123
MONGODB_DB=voygent

# JWT Secret (generate a secure random string)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT Refresh Secret
JWT_REFRESH_SECRET=your-super-secret-jwt-refresh-key-change-this

# Session Expiry (in milliseconds - 7 days)
SESSION_EXPIRY=604800000

# =============================================================================
# MEILISEARCH CONFIGURATION (for LibreChat search)
# =============================================================================

MEILI_HOST=http://meilisearch:7700
MEILI_MASTER_KEY=meilisearch_master_key

# =============================================================================
# SECURITY & CORS CONFIGURATION
# =============================================================================

# Allowed web origins for CORS
ALLOWED_WEB_ORIGINS=http://localhost:3080,http://localhost:3000,http://localhost:80

# Allowed MCP origins
ALLOWED_MCP_ORIGINS=http://localhost:3080,http://librechat:3080

# User registration settings
ALLOW_REGISTRATION=true
ALLOW_SOCIAL_LOGIN=false
ALLOW_SOCIAL_REGISTRATION=false

# =============================================================================
# MCP SERVER CONFIGURATION
# =============================================================================

# MCP Server Mode Selection
# - local: Use local orchestrator API + SQLite/PostgreSQL (default, fully self-contained)
# - remote: Connect to existing Cloudflare Workers MCP servers (shared infrastructure)  
# - hybrid: Mix of local and remote (advanced configuration)
MCP_MODE=local

# Individual MCP Server Modes (for hybrid configuration)
# - local: Use local services
# - remote: Use Cloudflare Workers
MCP_DATABASE_MODE=local
MCP_INSTRUCTIONS_MODE=local

# Chrome MCP Server (for browser automation)
# Host path is used for generation-time existence check; container path is what LibreChat runs.
MCP_CHROME_PATH=./mcp-chrome/app/native-server/dist/index.js
MCP_CHROME_CONTAINER_PATH=/mcp-chrome/index.js
CHROME_PATH=/usr/bin/google-chrome

# =============================================================================
# REMOTE MCP SERVER CONFIGURATION (for remote/hybrid modes)
# =============================================================================

# Your existing Cloudflare Workers MCP servers
# Uncomment and configure these when using remote or hybrid modes

# D1 Database MCP Server (trip management, hotel caching, facts processing)
# MCP_D1_DATABASE_URL=https://d1-database-improved.somotravel.workers.dev
# MCP_D1_DATABASE_SSE_URL=https://d1-database-improved.somotravel.workers.dev/sse

# Prompt Instructions MCP Server (workflow management, conversation state)
# MCP_PROMPT_INSTRUCTIONS_URL=https://prompt-instructions-d1-mcp.somotravel.workers.dev
# MCP_PROMPT_INSTRUCTIONS_SSE_URL=https://prompt-instructions-d1-mcp.somotravel.workers.dev/sse

# Authentication for remote MCP servers
# MCP_AUTH_KEY=your-secret-auth-key

# =============================================================================
# MCP MODE BENEFITS
# =============================================================================

# LOCAL MODE (default):
# + Fully self-contained, no external dependencies
# + Complete data ownership and privacy
# + Fastest response times (no network latency)
# + Works offline after initial setup
# + BYOK cost model with full control
# - Requires local database management
# - No shared data across installations

# REMOTE MODE:
# + Leverage existing Cloudflare infrastructure
# + Shared data across multiple installations
# + Automatic backups and scaling
# + No local database maintenance
# + Advanced features from production MCP servers
# - Requires network connectivity
# - Data stored on external servers
# - Potential network latency

# HYBRID MODE:
# + Best of both worlds
# + Keep sensitive data local, share workflow state
# + Flexible per-component configuration
# - More complex setup and troubleshooting

# =============================================================================
# LOGGING AND DEBUGGING
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Debug mode (true/false)
DEBUG_MODE=false

# =============================================================================
# OPTIONAL FEATURES
# =============================================================================

# PDF Generation (requires Puppeteer/Chrome)
ENABLE_PDF_EXPORT=true

# Email Configuration (for notifications, optional)
# EMAIL_SERVICE=gmail
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USER=your-email@gmail.com
# EMAIL_PASS=your-app-password

# File upload limits
MAX_FILE_SIZE=10485760  # 10MB
MAX_FILES_PER_USER=20

# =============================================================================
# PRODUCTION NOTES
# =============================================================================

# For production deployment:
# 1. Change all default passwords and secrets
# 2. Use proper domain names instead of localhost
# 3. Configure TLS/SSL certificates
# 4. Set DEBUG_MODE=false
# 5. Use PostgreSQL instead of SQLite for better performance
# 6. Set up proper logging and monitoring
